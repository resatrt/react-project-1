{"version":3,"sources":["TodoInput/todoInput.js","TodoItem/todoItem.js","leancloud.js","SignUpForm.js","SignInForm.js","SignInOrSignUp.js","ForgotPassword.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","React","Component","TodoItem","onToggle","todo","onDelate","checked","status","toggle","title","onClick","delate","AV","init","appId","appKey","serverURLs","getCurrentUser","user","User","current","getUserFormAVUser","AVUser","id","attributes","signUpForm","formData","email","username","password","signInForm","href","onForgotPassword","SignInOrSignUp","state","selected","setState","target","switch","onSignUp","onSignIn","ForgotPassword","UserDialog","selectedTab","preventDefault","successFn","errorFn","setUsername","setPassword","setEmail","signUp","then","loginedUser","call","error","code","alert","logIn","signIn","stateCopy","JSON","parse","stringify","requestPasswordReset","success","changeFormData","showForgotPassword","resetPassword","returnToSignIn","App","newTodo","todoList","event","push","delated","logOut","todos","filter","item","map","index","signOut","addTodo","onSignUpOrSignIn","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b808458a.chunk.js","sourcesContent":["import React from 'react'\nimport './todoInput.css'\nclass TodoInput extends React.Component {\n    render() {\n        return (\n            <input type='text' value={this.props.content}//去掉default\n            className='todoInput'\n            onChange={this.changeTitle.bind(this)}   \n            onKeyPress={this.submit.bind(this)}\n            />\n        )\n    }\n    submit(e){\n        if(e.key==='Enter'){\n            this.props.onSubmit(e)\n        }\n    }\n    changeTitle(e){\n        this.props.onChange(e)\n    }\n}\nexport default TodoInput","import React from 'react'\nimport './todoItem.css'\nclass TodoItem extends React.Component {\n    toggle(e) {\n        this.props.onToggle(e, this.props.todo)\n    }\n    delate(e) {\n        this.props.onDelate(e, this.props.todo)\n    }\n    render() {\n\n        return (\n            <div className='todoItem'>\n                <input type='checkbox' checked={this.props.todo.status === 'completed'}\n                    onChange={this.toggle.bind(this)} />\n                <span className='title'> {this.props.todo.title}</span>\n                <button onClick={this.delate.bind(this)}>删除</button>\n            </div>\n        )\n    }\n}\nexport default TodoItem","import AV from 'leancloud-storage'\n\nAV.init({\n    appId: \"pEMYmCotCpDs8mpGE8L2wS0y-gzGzoHsz\",\n    appKey: \"pYMJXjgzCIp4M4DJKLUXuavz\",\n    serverURLs: \"https://pemymcot.lc-cn-n1-shared.com\"\n});\n\nexport default AV\n\nexport function signUp(email, username, password, successFn, errorFn) {\n    //新建AVUser对象实例\n    var user = new AV.User()\n    //设置用户名\n    user.setUsername(username)\n    //设置密码\n    user.setPassword(password)\n    //设置邮箱,没写\n    user.setEmail(email)\n    user.signUp().then(function (loginedUser) {\n        let user = getUserFormAVUser(loginedUser)\n        successFn.call(null, user)\n    }, function (error) {\n        errorFn.call(null, error)\n    })\n    return undefined\n}\nexport function signIn(username, password, successFn, errorFn) {\n    AV.User.logIn(username, password).then(function (loginedUser) {\n        let user = getUserFormAVUser(loginedUser)\n        successFn.call(null, user)\n    }, function (error) {\n        errorFn.call(null, error)\n    })\n}\n\nexport function getCurrentUser() {\n    let user = AV.User.current()\n    if (user) {\n        return getUserFormAVUser(user)\n    } else {\n        return null\n    }\n}\nexport function signOut() {\n    AV.User.logOut()\n    return undefined\n}\n\nexport function sendPasswordResetEmail(email, successFn, errorFn) {\n    AV.User.requestPasswordReset(email).then(function(success){\n        successFn.call()\n    },function(error){\n        errorFn.call(null,error)\n    }) \n}\nfunction getUserFormAVUser(AVUser) {\n\n    return {\n        id: AVUser.id,\n        ...AVUser.attributes   //就是把 AVUser.attributes 的属性拷贝到这个对象\n    }\n\n}","import React from 'react'\n\nexport default function signUpForm (props) {\n        return (\n            <form className='signUp' onSubmit={props.onSubmit.bind(this)}>\n                <div className='row' >\n                    <label>邮箱</label>\n                    <input type='text' value={props.formData.email}\n                        onChange={props.onChange.bind(null, 'email')} />\n                    {/* bind 不仅可以绑定 this ，还可以绑定第一个参数*/}\n                </div>\n                <div className='row' >\n                    <label>用户名</label>\n                    <input type='text' value={props.formData.username}\n                        onChange={props.onChange.bind(null, 'username')} />\n                    {/* bind 不仅可以绑定 this ，还可以绑定第一个参数*/}\n                </div>\n                <div className='row'>\n                    <label>密码</label>\n                    <input type='password' value={props.formData.password}\n                        onChange={props.onChange.bind(null, 'password')} />\n                </div>\n                <div className='row action'>\n                    <button type='submit'>注册</button>\n                </div>\n            </form>\n        )\n\n    }\n\n","import React from 'react'\n\nexport default function signInForm (props) {//也可以不要函数名\n \n        return (\n            <form className='signIn' onSubmit={props.onSubmit}>\n                <div className='row'>\n                    <label>用户名</label>\n                    <input type='text' value={props.formData.username}\n                        onChange={props.onChange.bind(null, 'username')} />\n                </div>\n                <div className='row'>\n                    <label>密码</label>\n                    <input type='password' value={props.formData.password}\n                        onChange={props.onChange.bind(null, 'password')} />\n                </div>\n                <div className='row action'>\n                    <button type='submit'>登录</button>\n                    <a href=\"/#\" onClick={props.onForgotPassword}>忘记密码了？</a>\n                </div>\n            </form>\n        )\n    }","import React, { Component } from 'react'\nimport SignUpForm from './SignUpForm'\nimport SignInForm from './SignInForm'\n\nexport default class SignInOrSignUp extends Component {\n    constructor(){\n        super()\n        this.state={\n            selected:'signUp'\n        }\n    }\n    switch(e) {\n        this.setState({\n            selected: e.target.value\n        })\n    }\n    render() {\n        return (\n            <div className='signInOrSignUp'>\n                <nav >\n                    <label><input type='radio' value='signUp'\n                        checked={this.state.selected === 'signUp'}\n                        onChange={this.switch.bind(this)}\n                    />注册</label>\n                    <label><input type='radio' value='signIn'\n                        checked={this.state.selected === 'signIn'}\n                        onChange={this.switch.bind(this)}\n                    />登录</label>\n                </nav>\n                <div className='panes'>\n                    {this.state.selected === 'signUp' ?\n                        <SignUpForm formData={this.props.formData}\n                            onSubmit={this.props.onSignUp}\n                            onChange={this.props.onChange} />\n                        : null}\n                    {this.state.selected === 'signIn' ?\n                        <SignInForm formData={this.props.formData}\n                            onSubmit={this.props.onSignIn}\n                            onChange={this.props.onChange}\n                            onForgotPassword={this.props.onForgotPassword} />\n                        : null}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class ForgotPassword extends Component {\n    render() {\n        return (\n            <div className='forgotPassword'>\n                <h3>重置密码</h3>\n                <form className='formPassword' onSubmit={this.props.onSubmit}>\n                    <div className='row'>\n                        <label>邮箱</label>\n                        <input type='text' value={this.props.formData.email}\n                            onChange={this.props.onChange.bind(null, 'email')} />\n                    </div>\n                    <div className='row action'>\n                        <button type='submit'>发送</button>\n                        <a href='/#' onClick={this.props.onSignIn}>返回登录</a>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './UserDialog.css'\nimport { signUp, signIn, sendPasswordResetEmail } from './leancloud'\nimport SignInOrSignUp from './SignInOrSignUp'\nimport ForgotPassword from './ForgotPassword'\n\nexport default class UserDialog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedTab: 'signInOrSignUp',\n            formData: {\n                email: '',\n                username: '',\n                password: ''\n            }\n        }\n    }\n\n    signUp(e) {\n        e.preventDefault()\n        let { email, username, password } = this.state.formData\n        let success = (user) => {\n            this.props.onSignUp.call(null, user)//用call 就不指定this\n        }\n        let error = (error) => {\n            switch (error.code) {\n                case 202:\n                    alert('用户名已被占用')\n                    break\n                default:\n                    alert(error)\n                    break\n            }\n        }\n        signUp(email, username, password, success, error)\n    }\n    signIn(e) {\n        e.preventDefault()\n        let { username, password } = this.state.formData\n        let success = (user) => {\n            this.props.onSignIn.call(null, user)\n        }\n        let error = (error) => {\n            switch (error.code) {\n                case 210:\n                    alert('用户名与密码不匹配')\n                    break\n                default:\n                    alert(error)\n                    break\n            }\n        }\n        signIn(username, password, success, error)\n    }\n    changeFormData(key, e) { //第一个的参数是绑定的，username之类的，后面的是事件本身\n        let stateCopy = JSON.parse(JSON.stringify(this.state))//用JSON 深拷贝\n        stateCopy.formData[key] = e.target.value  //改state里的值必须用setstate，不然会报错\n        this.setState(stateCopy)\n    }\n    showForgotPassword() {\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\n        stateCopy.selectedTab = 'forgotPassword'\n        this.setState(stateCopy)\n    }\n    resetPassword(e) {\n        e.preventDefault()\n        sendPasswordResetEmail(this.state.formData.email)\n    }\n    returnToSignIn() {\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\n        stateCopy.selectedTab = 'signInOrSignUp'\n        this.setState(stateCopy)\n    }\n    render() {\n        return (\n            <div className='UserDialog-Wrapper'>\n                <div className='UserDialog'>\n                    {this.state.selectedTab === 'signInOrSignUp' ?\n                        <SignInOrSignUp formData={this.state.formData}\n                            onChange={this.changeFormData.bind(this)}\n                            onSignIn={this.signIn.bind(this)}\n                            onSignUp={this.signUp.bind(this)}\n                            onForgotPassword={this.showForgotPassword.bind(this)} /> :\n                        <ForgotPassword formData={this.state.formData}\n                            onSubmit={this.resetPassword.bind(this)}\n                            onChange={this.changeFormData.bind(this)}\n                            onSignIn={this.returnToSignIn.bind(this)} />}\n                </div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport TodoInput from './TodoInput/todoInput';\nimport TodoItem from './TodoItem/todoItem';\nimport 'normalize.css';\nimport UserDialog from './UserDialog';\nimport {getCurrentUser,signOut} from './leancloud';\n\nlet id = 0\nfunction idMaker() {\n  id += 1\n\n  return id\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser||{},\n      newTodo: '',\n      todoList: []\n    }\n  }\n  componentDidUpdate() {\n\n  }\n  addTodo(event) {\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      delated: false,\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  toggle(e, todo) {\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state)\n  }\n  delate(event, todo) {\n    todo.delated = true\n    this.setState(this.state)\n  }\n  onSignUpOrSignIn(user) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy) //此处传入的值被智能提示成this.state了，因此更新的不是更改后的state值，导致注册完成后userDialog不消失\n  }\n  signOut(){\n    signOut()\n    let stateCopy=JSON.parse(JSON.stringify(this.state))\n    stateCopy.user={}\n    this.setState(stateCopy)\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item) => !item.delated)//filter函数是个筛选函数,此处item.delated的值为false，\n      .map((item, index) => {      //取反为true，即取todoList里delate为false的对象\n        return (\n          <li key={index}>\n            <TodoItem todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelate={this.delate.bind(this)} />\n          </li>\n        )\n      })\n\n    return (\n      <div className='App'>\n        <h1>{this.state.user.username || '我'}的待办\n    {this.state.user.id?<button onClick={this.signOut.bind(this)}>登出</button>:null}</h1>\n        <div className='inputWrapper'>\n          {<TodoInput\n            content={this.state.newTodo}\n            onChange={this.changeTitle.bind(this)}\n            onSubmit={this.addTodo.bind(this)} />/*此处必须绑定this*/}\n        </div>\n        <ol className='todoList'>\n          {todos}\n        </ol>\n        {this.state.user.id ? \n        null : \n        <UserDialog \n        onSignUp={this.onSignUpOrSignIn.bind(this)} \n        onSignIn={this.onSignUpOrSignIn.bind(this)}/>}\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}