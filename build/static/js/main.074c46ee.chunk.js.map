{"version":3,"sources":["TodoInput/todoInput.js","TodoItem/todoItem.js","leancloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","React","Component","TodoItem","onToggle","todo","onDelate","checked","status","toggle","title","onClick","delate","AV","init","appId","appKey","serverURLs","getCurrentUser","user","User","current","getUserFormAVUser","AVUser","id","attributes","UserDialog","state","selected","formData","username","password","setState","target","preventDefault","successFn","errorFn","setUsername","setPassword","signUp","then","loginedUser","call","error","onSignUp","alert","logIn","signIn","onSignIn","stateCopy","JSON","parse","stringify","signUpForm","changeFormData","signInForm","switch","App","newTodo","todoList","event","push","delated","logOut","todos","filter","item","map","index","signOut","addTodo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.074c46ee.chunk.js","sourcesContent":["import React from 'react'\nimport './todoInput.css'\nclass TodoInput extends React.Component {\n    render() {\n        return (\n            <input type='text' value={this.props.content}//去掉default\n            className='todoInput'\n            onChange={this.changeTitle.bind(this)}   \n            onKeyPress={this.submit.bind(this)}\n            />\n        )\n    }\n    submit(e){\n        if(e.key==='Enter'){\n            this.props.onSubmit(e)\n        }\n    }\n    changeTitle(e){\n        this.props.onChange(e)\n    }\n}\nexport default TodoInput","import React from 'react'\nimport './todoItem.css'\nclass TodoItem extends React.Component {\n    toggle(e) {\n        this.props.onToggle(e, this.props.todo)\n    }\n    delate(e) {\n        this.props.onDelate(e, this.props.todo)\n    }\n    render() {\n\n        return (\n            <div className='todoItem'>\n                <input type='checkbox' checked={this.props.todo.status === 'completed'}\n                    onChange={this.toggle.bind(this)} />\n                <span className='title'> {this.props.todo.title}</span>\n                <button onClick={this.delate.bind(this)}>删除</button>\n            </div>\n        )\n    }\n}\nexport default TodoItem","import AV from 'leancloud-storage'\n\nAV.init({\n    appId: \"pEMYmCotCpDs8mpGE8L2wS0y-gzGzoHsz\",\n    appKey: \"pYMJXjgzCIp4M4DJKLUXuavz\",\n    serverURLs: \"https://pemymcot.lc-cn-n1-shared.com\"\n});\n\nexport default AV\n\nexport function signUp(username, password, successFn, errorFn) {\n    //新建AVUser对象实例\n    var user = new AV.User()\n    //设置用户名\n    user.setUsername(username)\n    //设置密码\n    user.setPassword(password)\n    //设置邮箱,没写\n    user.signUp().then(function (loginedUser) {\n        let user = getUserFormAVUser(loginedUser)\n        successFn.call(null, user)\n    }, function (error) {\n        errorFn.call(null, error)\n    })\n    return undefined\n}\nexport function signIn(username,password ,successFn,errorFn){\n    AV.User.logIn(username,password).then(function(loginedUser){\n        let user=getUserFormAVUser(loginedUser)\n        successFn.call(null,user)\n    },function(error){\n        errorFn.call(null,error)\n    })\n}\n\nexport function getCurrentUser(){\n    let user=AV.User.current()\n    if(user){\n        return getUserFormAVUser(user)\n    }else{\n        return null\n    }\n}\nexport function signOut(){\n    AV.User.logOut()\n    return undefined\n}\n\nfunction getUserFormAVUser(AVUser) {\n\n    return {\n        id: AVUser.id,\n        ...AVUser.attributes   //就是把 AVUser.attributes 的属性拷贝到这个对象\n    }\n\n}","import React from 'react'\nimport './UserDialog.css'\nimport { signUp,signIn } from './leancloud'\n\nexport default class UserDialog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected: 'signUp',\n            formData: {\n                username: '',\n                password: ''\n            }\n        }\n    }\n    switch(e) {\n        this.setState({\n            selected: e.target.value\n        })\n    }\n    signUp(e) {\n        e.preventDefault()\n        let { username, password } = this.state.formData\n        let success = (user) => {\n            this.props.onSignUp.call(null, user)//用call 就不指定this\n        }\n        let error = (error) => {\n            alert(error)\n        }\n        signUp(username, password, success, error)\n    }\n    signIn(e) {\n        e.preventDefault()\n        let {username,password}=this.state.formData\n        let success=(user)=>{\n            this.props.onSignIn.call(null,user)\n        }\n        let error=(error)=>{\n            alert(error)\n        }\n        signIn(username,password,success,error)\n     }\n    changeFormData(key, e) { //前面的参数是绑定的，username之类的，后面的是事件本身\n        let stateCopy = JSON.parse(JSON.stringify(this.state))//用JSON 深拷贝\n        stateCopy.formData[key] = e.target.value  //改state里的值必须用setstate，不然会报错\n        this.setState(stateCopy)\n    }\n\n    render() {\n        let signUpForm = (\n            <form className='signUp' onSubmit={this.signUp.bind(this)}>\n                <div className='row' >\n                    <label>用户名</label>\n                    <input type='text' value={this.state.formData.username}\n                        onChange={this.changeFormData.bind(this, 'username')} />\n                    {/* bind 不仅可以绑定 this ，还可以绑定第一个参数*/}\n                </div>\n                <div className='row'>\n                    <label>密码</label>\n                    <input type='password' value={this.state.formData.password}\n                        onChange={this.changeFormData.bind(this, 'password')} />\n                </div>\n                <div className='row'>\n                    <button type='submit'>注册</button>\n                </div>\n            </form>\n        )\n        let signInForm = (\n            <form className='signIn' onSubmit={this.signIn.bind(this)}>\n                <div className='row'>\n                    <label>用户名</label>\n                    <input type='text' value={this.state.formData.username}\n                        onChange={this.changeFormData.bind(this, 'username')} />\n                </div>\n                <div className='row'>\n                    <label>密码</label>\n                    <input type='password' value={this.state.formData.password}\n                        onChange={this.changeFormData.bind(this, 'password')} />\n                </div>\n                <div className='row action'>\n                    <button type='submit'>登录</button>\n                </div>\n            </form>\n        )\n        return (\n            <div className='UserDialog-Wrapper'>\n                <div className='UserDialog'>\n                    <nav >\n                        <label><input type='radio' value='signUp'\n                            checked={this.state.selected === 'signUp'}\n                            onChange={this.switch.bind(this)}\n                        />注册</label>\n                        <label><input type='radio' value='signIn'\n                            checked={this.state.selected === 'signIn'}\n                            onChange={this.switch.bind(this)}\n                        />登录</label>\n                    </nav>\n                    <div className='panes'>\n                        {this.state.selected === 'signUp' ? signUpForm : null}\n                        {this.state.selected === 'signIn' ? signInForm : null}\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport TodoInput from './TodoInput/todoInput';\nimport TodoItem from './TodoItem/todoItem';\nimport 'normalize.css';\nimport UserDialog from './UserDialog';\nimport {getCurrentUser,signOut} from './leancloud';\n\nlet id = 0\nfunction idMaker() {\n  id += 1\n\n  return id\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser||{},\n      newTodo: '',\n      todoList: []\n    }\n  }\n  componentDidUpdate() {\n\n  }\n  addTodo(event) {\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      delated: false,\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n  }\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n  toggle(e, todo) {\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state)\n  }\n  delate(event, todo) {\n    todo.delated = true\n    this.setState(this.state)\n  }\n  onSignUp(user) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy) //此处传入的值被智能提示成this.state了，因此更新的不是更改后的state值，导致注册完成后userDialog不消失\n  }\n  onSignIn(user){\n    let stateCopy=JSON.parse(JSON.stringify(this.state))\n    stateCopy.user=user\n    this.setState(stateCopy)\n  }\n  signOut(){\n    signOut()\n    let stateCopy=JSON.parse(JSON.stringify(this.state))\n    stateCopy.user={}\n    this.setState(stateCopy)\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item) => !item.delated)//filter函数是个筛选函数,此处item.delated的值为false，\n      .map((item, index) => {      //取反为true，即取todoList里delate为false的对象\n        return (\n          <li key={index}>\n            <TodoItem todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelate={this.delate.bind(this)} />\n          </li>\n        )\n      })\n\n    return (\n      <div className='App'>\n        <h1>{this.state.user.username || '我'}的待办\n    {this.state.user.id?<button onClick={this.signOut.bind(this)}>登出</button>:null}</h1>\n        <div className='inputWrapper'>\n          {<TodoInput\n            content={this.state.newTodo}\n            onChange={this.changeTitle.bind(this)}\n            onSubmit={this.addTodo.bind(this)} />/*此处必须绑定this*/}\n        </div>\n        <ol className='todoList'>\n          {todos}\n        </ol>\n        {this.state.user.id ? \n        null : \n        <UserDialog \n        onSignUp={this.onSignUp.bind(this)} \n        onSignIn={this.onSignIn.bind(this)}/>}\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}